{"version":3,"sources":["components/Navigation/index.js","components/TaskManager/Task.js","components/TaskManager/TaskList.js","components/TaskManager/TaskCategory.js","components/TaskManager/index.js","components/ReportManager/index.js","components/DrawMenu/index.js","sample_data/sample_data.js","App.js","serviceWorker.js","index.js"],"names":["menuButton","cursor","color","fontSize","logoContainer","marginTop","display","Navigation","props","react_default","a","createElement","className","row","col","span","icon","onClick","handleClick","style","type","menuVisible","Task","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderClaimButton","claimed","tooltip","title","theme","onUnclaim","id","onClaim","inherits","createClass","key","value","marginBottom","fontWeight","moment","unix","createdDate","format","width","description","React","Component","TaskList","sortedTasks","selectedTasks","sort","b","Date","map","task","Task_Task","TaskCategory","active","tasks","CLAIMED","UNRESOLVED_CS","OTHER_TASKS","TaskManager","state","getCurrentTaskList","unresolvedChecksums","tasksAvailable","onCategoryClick","category","setState","_this2","Fragment","TaskCategory_TaskCategory","TaskList_TaskList","TabPane","Tabs","ReportManager","tabs","defaultActiveKey","onChange","tab","DrawMenu","drawer","visible","placement","onClose","mask","closable","activePage","TASK_MANAGER","handleNavClick","badge","count","openTasks","offset","REPORT_MANAGER","App","claimedTasks","componentKey","handleClaim","taskId","filter","push","newUnresolved","handleUnclaim","newClaimed","renderDrawer","components_DrawMenu_DrawMenu","renderPageContent","components_TaskManager_TaskManager","ReportManager_ReportManager","currentPage","components_Navigation_Navigation","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e283f1b6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Icon, Row, Col } from \"antd\";\nimport \"./Navigation.scss\";\n\nconst menuButton = {\n  cursor: \"pointer\",\n  color: \"white\",\n  fontSize: \"32px\"\n};\n\nconst logoContainer = {\n  marginTop: \"8px\",\n  display: \"inline\",\n};\n\nexport const Navigation = props => (\n  <div className=\"nav-bar\">\n    <Row>\n      <Col className=\"left-nav-column\" span={3}>\n      <div>\n        <Icon\n          onClick={props.handleClick}\n          style={menuButton}\n          type={props.menuVisible ? \"menu-fold\" : \"menu-unfold\"}\n        />\n      </div>\n      </Col>\n      <Col span={15} />\n      <Col span={6} style={logoContainer}>\n      </Col>\n    </Row>\n  </div>\n);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Col, Row, Icon, Tooltip } from \"antd\";\n\nimport \"./TaskManager.scss\";\n\nexport class Task extends React.Component {\n  renderClaimButton = claimed => {\n    if (claimed) {\n      return (\n        <Tooltip title=\"Unlaim task\">\n          <Icon\n            className=\"clickable\"\n            type=\"close-circle\"\n            theme=\"filled\"\n            style={{ color: \"red\", fontSize: \"20px\" }}\n            onClick={() => this.props.onUnclaim(this.props.id)}\n          />\n        </Tooltip>\n      );\n    }\n    return (\n      <Tooltip title=\"Claim task\">\n        <Icon\n          className=\"clickable\"\n          type=\"check-circle\"\n          theme=\"filled\"\n          style={{ color: \"green\", fontSize: \"20px\" }}\n          onClick={() => this.props.onClaim(this.props.id)}\n        />\n      </Tooltip>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"task\">\n        <Row>\n          <Col span={16} style={{ marginBottom: \"3px\" }}>\n            <div style={{ fontWeight: \"bold\" }}>Task ID: {this.props.id}</div>\n          </Col>\n          <Col span={8} style={{ marginBottom: \"3px\" }}>\n            <div>\n              Created:{\" \"}\n              {moment.unix(this.props.createdDate).format(\"DD.MM.YYYY\")}\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <div style={{ width: \"80%\" }}>{this.props.description}</div>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: \"10px\" }}>\n          <Col span={22} />\n          <Col span={2}>{this.renderClaimButton(this.props.claimed)}</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Task } from \"./Task\";\n\nexport class TaskList extends React.Component {\n  render() {\n    const sortedTasks = this.props.selectedTasks.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate))\n\n    return (\n      <div>\n        {sortedTasks.map(task => (\n          <Task\n            key={task.id}\n            id={task.id}\n            createdDate={task.createdDate}\n            description={task.description}\n            claimed={task.claimed}\n            onClaim={this.props.onClaim}\n            onUnclaim={this.props.onUnclaim}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./TaskManager.scss\";\n\nexport const TaskCategory = props => (\n  <div className={`task-category ${props.active ? \"active\" : \"\"}`} onClick={props.onClick}>\n    <div className=\"description\">\n      {props.description}\n    </div>\n    <div>\n      ({props.tasks.length})\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { TaskList } from \"./TaskList\";\n\nimport { TaskCategory } from \"./TaskCategory\";\n\nimport \"./TaskManager.scss\";\n\nconst CLAIMED = \"claimed\";\nconst UNRESOLVED_CS = \"unresolved_checksums\";\nconst OTHER_TASKS = \"other_tasks\";\n\nexport class TaskManager extends React.Component {\n  state = {\n    selectedTasks: UNRESOLVED_CS\n  };\n\n  getCurrentTaskList = () => {\n    switch (this.state.selectedTasks) {\n      case CLAIMED:\n        return this.props.claimed;\n      case UNRESOLVED_CS:\n        return this.props.unresolvedChecksums;\n      case OTHER_TASKS:\n        return [];\n      default:\n        return this.props.claimed;\n    }\n  };\n\n  tasksAvailable = () => {\n    return this.getCurrentTaskList().length > 0;\n  };\n\n  onCategoryClick = category => {\n    this.setState({ selectedTasks: category });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Tasks</h1>\n        <Row>\n          <Col span={6}>\n            <div\n              className={`task-container ${\n                this.getCurrentTaskList().length > 0 ? \"\" : \"no-tasks\"\n              }`}\n            >\n              <TaskCategory\n                description=\"My Tasks\"\n                tasks={this.props.claimed}\n                onClick={() => this.onCategoryClick(CLAIMED)}\n                active={this.state.selectedTasks === CLAIMED}\n              />\n              <TaskCategory\n                description=\"Unresolved checksums\"\n                tasks={this.props.unresolvedChecksums}\n                onClick={() => this.onCategoryClick(UNRESOLVED_CS)}\n                active={this.state.selectedTasks === UNRESOLVED_CS}\n              />\n              <TaskCategory\n                description=\"Other tasks\"\n                tasks={[]}\n                onClick={() => this.onCategoryClick(OTHER_TASKS)}\n                active={this.state.selectedTasks === OTHER_TASKS}\n              />\n            </div>\n          </Col>\n          <Col span={1}></Col>\n          {this.tasksAvailable() ? (\n            <Col span={12}>\n              <div className=\"task-container right\">\n                <TaskList\n                  selectedTasks={this.getCurrentTaskList()}\n                  onClaim={this.props.onClaim}\n                  onUnclaim={this.props.onUnclaim}\n                />\n              </div>\n            </Col>\n          ) : (\n            \"\"\n          )}\n        </Row>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tabs } from \"antd\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class ReportManager extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Reports</h1>\n        <Tabs defaultActiveKey=\"1\" onChange={() => {}} type=\"card\">\n          <TabPane tab=\"Create Report\" key=\"1\">\n              <p>Empty</p>\n          </TabPane>\n          <TabPane tab=\"Saved Reports\" key=\"2\">\n            <p>There are no saved reports yet.</p>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Icon, Drawer, Badge, Tooltip } from \"antd\";\nimport { TASK_MANAGER, REPORT_MANAGER } from \"../../App.js\";\nimport \"./DrawMenu.scss\";\n\nexport const DrawMenu = props => {\n  return (\n    <Drawer\n      className=\"drawer\"\n      visible={props.menuVisible}\n      placement=\"left\"\n      onClose={props.handleClick}\n      mask={false}\n      closable={false}\n      width=\"12.6%\"\n    >\n      <div\n        className={`menu-item ${\n          props.activePage === TASK_MANAGER ? \"active\" : \"\"\n        } clickable`}\n        onClick={() => props.handleNavClick(TASK_MANAGER)}\n      >\n        <Icon className=\"menu-icon\" type=\"ordered-list\" />{\" \"}\n        <Tooltip title=\"Number of unassigned tasks\">\n          <Badge count={props.openTasks} offset={[17, 2]}>\n            <span>Tasks</span>\n          </Badge>\n        </Tooltip>\n      </div>\n      <div\n        className={`menu-item ${\n          props.activePage === REPORT_MANAGER ? \"active\" : \"\"\n        } clickable`}\n        onClick={() => props.handleNavClick(REPORT_MANAGER)}\n      >\n        <Icon className=\"menu-icon\" type=\"clock-circle\" /> Reports\n      </div>\n    </Drawer>\n  );\n};\n","export const unresolvedChecksums = [\n    {\n      id: \"ab30df0ebbb3\",\n      createdDate: 1554971763,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.\",\n      claimed: false\n    },\n    {\n      id: \"5eb655848d32\",\n      createdDate: 1554888963,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\",\n      claimed: false\n    },\n    {\n      id: \"af9f49443e14\",\n      createdDate: 1554370563,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna.\",\n      claimed: false\n    },\n    {\n      id: \"51529cd9a285\",\n      createdDate: 1554370563,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.\",\n      claimed: false\n    },\n    {\n      id: \"b62703a53b1a\",\n      createdDate: 1554626163,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.\",\n      claimed: false\n    },\n    {\n      id: \"eb3137de23bb\",\n      createdDate: 1554543363,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna.\",\n      claimed: false\n    },\n    {\n      id: \"938014fbd9b8\",\n      createdDate: 1554024963,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\",\n      claimed: false\n    },\n    {\n      id: \"4164b3749333\",\n      createdDate: 1551951363,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\",\n      claimed: false\n    }\n  ]","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport { Navigation } from \"./components/Navigation\";\nimport { TaskManager } from \"./components/TaskManager\";\nimport { ReportManager } from \"./components/ReportManager\";\nimport { DrawMenu } from \"./components/DrawMenu\";\n\nimport \"./App.scss\";\n\nimport { unresolvedChecksums } from \"./sample_data/sample_data\";\n\nexport const TASK_MANAGER = \"task-manager\";\nexport const REPORT_MANAGER = \"report-manager\";\n\nclass App extends Component {\n  state = {\n    menuVisible: true,\n    activePage: TASK_MANAGER,\n    claimedTasks: [],\n    unresolvedChecksums: unresolvedChecksums\n  };\n\n  handleClick = () => {\n    this.setState({\n      menuVisible: !this.state.menuVisible\n    });\n  };\n\n  handleNavClick = componentKey => {\n    this.setState({ activePage: componentKey });\n  };\n\n  handleClaim = taskId => {\n    const task = this.state.unresolvedChecksums.filter(\n      task => task.id === taskId\n    )[0];\n    task.claimed = true;\n\n    const claimedTasks = this.state.claimedTasks;\n    claimedTasks.push(task);\n\n    const newUnresolved = this.state.unresolvedChecksums.filter(\n      task => task.id !== taskId\n    );\n\n    this.setState({ claimedTasks, unresolvedChecksums: newUnresolved });\n  };\n\n  handleUnclaim = taskId => {\n    const task = this.state.claimedTasks.filter(task => task.id === taskId)[0];\n    task.claimed = false;\n\n    const unresolvedChecksums = this.state.unresolvedChecksums;\n    unresolvedChecksums.push(task);\n\n    const newClaimed = this.state.claimedTasks.filter(\n      task => task.id !== taskId\n    );\n\n    this.setState({ unresolvedChecksums, claimedTasks: newClaimed });\n  };\n\n  renderDrawer = () => (\n    <DrawMenu\n      menuVisible={this.state.menuVisible}\n      activePage={this.state.activePage}\n      handleClick={() => this.handleClick(this.state.activePage)}\n      handleNavClick={componentKey => this.handleNavClick(componentKey)}\n      openTasks={this.state.unresolvedChecksums.length}\n    />\n  );\n\n  renderPageContent = componentKey => {\n    switch (componentKey) {\n      case TASK_MANAGER:\n        return (\n          <TaskManager\n            claimed={this.state.claimedTasks}\n            unresolvedChecksums={this.state.unresolvedChecksums}\n            onClaim={taskId => this.handleClaim(taskId)}\n            onUnclaim={taskId => this.handleUnclaim(taskId)}\n          />\n        );\n      case REPORT_MANAGER:\n        return <ReportManager />;\n      default:\n        return (\n          <TaskManager\n            claimed={this.state.claimedTasks}\n            unresolvedChecksums={this.state.unresolvedChecksums}\n            onClaim={taskId => this.handleClaim(taskId)}\n            onUnclaim={taskId => this.handleUnclaim(taskId)}\n          />\n        );\n    }\n  };\n\n  render() {\n    const {menuVisible} = this.state\n    const currentPage = this.renderPageContent(this.state.activePage);\n\n    return (\n      <div className=\"App\">\n        <Row>\n          <Navigation\n            menuVisible={this.state.menuVisible}\n            handleClick={() => this.handleClick()}\n          />\n        </Row>\n\n        <Row className=\"app-content\">\n          {menuVisible ? (\n            <div className=\"menu-visible\">\n              <Col span={3} id=\"drawer-col\">\n                {this.renderDrawer()}\n              </Col>\n              <Col span={21}>{currentPage}</Col>\n            </div>\n          ) : (\n            <Col span={24}>{currentPage}</Col>\n          )}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './variables.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}