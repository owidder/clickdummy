{"version":3,"sources":["components/Navigation/index.js","components/TaskManager/Task.js","components/TaskManager/TaskList.js","components/TaskManager/TaskCategory.js","components/TaskManager/index.js","components/ReportCreator/SelectedAttributes.js","components/ReportCreator/Attribute.js","components/ReportCreator/AttributeSource.js","components/ReportCreator/index.js","components/ReportManager/index.js","components/DrawMenu/index.js","sample_data/sample_data.js","App.js","serviceWorker.js","index.js"],"names":["menuButton","cursor","color","fontSize","logoContainer","marginTop","display","Navigation","props","react_default","a","createElement","className","row","col","span","icon","onClick","handleClick","style","type","menuVisible","Task","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderClaimButton","claimed","tooltip","title","theme","onUnclaim","id","onClaim","inherits","createClass","key","value","marginBottom","fontWeight","moment","unix","createdDate","format","width","description","React","Component","TaskList","sortedTasks","selectedTasks","sort","b","Date","map","task","Task_Task","TaskCategory","active","tasks","CLAIMED","UNRESOLVED_CS","OTHER_TASKS","TaskManager","state","getCurrentTaskList","unresolvedChecksums","tasksAvailable","onCategoryClick","category","setState","_this2","Fragment","TaskCategory_TaskCategory","TaskList_TaskList","SelectedAttributes","columns","data","createColumns","currentColumns","attributes","forEach","item","push","react_beautiful_dnd_esm","draggableId","index","provided","assign","draggableProps","dragHandleProps","ref","innerRef","tag","marginLeft","dataIndex","createEmptyDataSet","h8","onReset","prevProps","prevState","tableWidth","undefined","droppableId","direction","backgroundColor","overflowX","placeholder","table","bordered","dataSource","pagination","Attribute","AttributeSource","deriveColorFromAttributeGroup","groupId","maxWidth","attributeCollection","paddingTop","ReportCreator_Attribute","getInitialState","selectedAttributes","availableAttributes","mapAttributeAndGroup","ReportCreator","onDragEnd","result","destination","source","_this$state","movedItem","filter","attribute","splice","newSelected","onDragStart","onDragUpdate","input","SelectedAttributes_SelectedAttributes","AttributeSource_AttributeSource","es_button","marginRight","TabPane","Tabs","ReportManager","tabs","defaultActiveKey","onChange","tab","components_ReportCreator_ReportCreator","DrawMenu","drawer","visible","placement","onClose","mask","closable","activePage","TASK_MANAGER","handleNavClick","badge","count","openTasks","offset","REPORT_MANAGER","App","claimedTasks","componentKey","handleClaim","taskId","newUnresolved","handleUnclaim","newClaimed","renderDrawer","components_DrawMenu_DrawMenu","renderPageContent","components_TaskManager_TaskManager","ReportManager_ReportManager","currentPage","components_Navigation_Navigation","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24c6fc63.chunk.js","sourcesContent":["import React from \"react\";\nimport { Icon, Row, Col } from \"antd\";\nimport \"./Navigation.scss\";\n\nconst menuButton = {\n  cursor: \"pointer\",\n  color: \"white\",\n  fontSize: \"32px\"\n};\n\nconst logoContainer = {\n  marginTop: \"8px\",\n  display: \"inline\",\n};\n\nexport const Navigation = props => (\n  <div className=\"nav-bar\">\n    <Row>\n      <Col className=\"left-nav-column\" span={3}>\n      <div>\n        <Icon\n          onClick={props.handleClick}\n          style={menuButton}\n          type={props.menuVisible ? \"menu-fold\" : \"menu-unfold\"}\n        />\n      </div>\n      </Col>\n      <Col span={15} />\n      <Col span={6} style={logoContainer}>\n      </Col>\n    </Row>\n  </div>\n);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Col, Row, Icon, Tooltip } from \"antd\";\n\nimport \"./TaskManager.scss\";\n\nexport class Task extends React.Component {\n  renderClaimButton = claimed => {\n    if (claimed) {\n      return (\n        <Tooltip title=\"Unlaim task\">\n          <Icon\n            className=\"clickable\"\n            type=\"close-circle\"\n            theme=\"filled\"\n            style={{ color: \"red\", fontSize: \"20px\" }}\n            onClick={() => this.props.onUnclaim(this.props.id)}\n          />\n        </Tooltip>\n      );\n    }\n    return (\n      <Tooltip title=\"Claim task\">\n        <Icon\n          className=\"clickable\"\n          type=\"check-circle\"\n          theme=\"filled\"\n          style={{ color: \"green\", fontSize: \"20px\" }}\n          onClick={() => this.props.onClaim(this.props.id)}\n        />\n      </Tooltip>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"task\">\n        <Row>\n          <Col span={16} style={{ marginBottom: \"3px\" }}>\n            <div style={{ fontWeight: \"bold\" }}>Task ID: {this.props.id}</div>\n          </Col>\n          <Col span={8} style={{ marginBottom: \"3px\" }}>\n            <div>\n              Created:{\" \"}\n              {moment.unix(this.props.createdDate).format(\"DD.MM.YYYY\")}\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <div style={{ width: \"80%\" }}>{this.props.description}</div>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: \"10px\" }}>\n          <Col span={22} />\n          <Col span={2}>{this.renderClaimButton(this.props.claimed)}</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Task } from \"./Task\";\n\nexport class TaskList extends React.Component {\n  render() {\n    const sortedTasks = this.props.selectedTasks.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate))\n\n    return (\n      <div>\n        {sortedTasks.map(task => (\n          <Task\n            key={task.id}\n            id={task.id}\n            createdDate={task.createdDate}\n            description={task.description}\n            claimed={task.claimed}\n            onClaim={this.props.onClaim}\n            onUnclaim={this.props.onUnclaim}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./TaskManager.scss\";\n\nexport const TaskCategory = props => (\n  <div className={`task-category ${props.active ? \"active\" : \"\"}`} onClick={props.onClick}>\n    <div className=\"description\">\n      <h2>{props.description}</h2>\n    </div>\n    <div>\n      <h2>({props.tasks.length})</h2>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { TaskList } from \"./TaskList\";\n\nimport { TaskCategory } from \"./TaskCategory\";\n\nimport \"./TaskManager.scss\";\n\nconst CLAIMED = \"claimed\";\nconst UNRESOLVED_CS = \"unresolved_checksums\";\nconst OTHER_TASKS = \"other_tasks\";\n\nexport class TaskManager extends React.Component {\n  state = {\n    selectedTasks: UNRESOLVED_CS\n  };\n\n  getCurrentTaskList = () => {\n    switch (this.state.selectedTasks) {\n      case CLAIMED:\n        return this.props.claimed;\n      case UNRESOLVED_CS:\n        return this.props.unresolvedChecksums;\n      case OTHER_TASKS:\n        return [];\n      default:\n        return this.props.claimed;\n    }\n  };\n\n  tasksAvailable = () => {\n    return this.getCurrentTaskList().length > 0;\n  };\n\n  onCategoryClick = category => {\n    this.setState({ selectedTasks: category });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Tasks</h1>\n        <Row>\n          <Col span={5}>\n            <div\n              className={`task-container ${\n                this.getCurrentTaskList().length > 0 ? \"\" : \"no-tasks\"\n              }`}\n            >\n              <TaskCategory\n                description=\"My Tasks\"\n                tasks={this.props.claimed}\n                onClick={() => this.onCategoryClick(CLAIMED)}\n                active={this.state.selectedTasks === CLAIMED}\n              />\n              <TaskCategory\n                description=\"Unresolved checksums\"\n                tasks={this.props.unresolvedChecksums}\n                onClick={() => this.onCategoryClick(UNRESOLVED_CS)}\n                active={this.state.selectedTasks === UNRESOLVED_CS}\n              />\n              <TaskCategory\n                description=\"Other tasks\"\n                tasks={[]}\n                onClick={() => this.onCategoryClick(OTHER_TASKS)}\n                active={this.state.selectedTasks === OTHER_TASKS}\n              />\n            </div>\n          </Col>\n          {this.tasksAvailable() ? (\n            <Col span={8}>\n              <div className=\"task-container right\">\n                <TaskList\n                  selectedTasks={this.getCurrentTaskList()}\n                  onClaim={this.props.onClaim}\n                  onUnclaim={this.props.onUnclaim}\n                />\n              </div>\n            </Col>\n          ) : (\n            \"\"\n          )}\n        </Row>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Table, Tag } from \"antd\";\n\nimport \"./SelectedAttributes.scss\";\n\nconst DEFAULT_CELL_WIDTH = 180;\nconst EMPTY_QUERY_CELL_WIDTH = 350;\n\nexport class SelectedAttributes extends React.Component {\n  state = {\n    columns: [],\n    data: []\n  };\n\n  createColumns = () => {\n    let currentColumns = [];\n    this.props.attributes.forEach(item =>\n      currentColumns.push({\n        title: (\n          <div>\n            <Draggable\n              key={item.id}\n              draggableId={`target-${item.id}`}\n              index={item.id}\n            >\n              {provided => (\n                <span\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  ref={provided.innerRef}\n                >\n                  <Tag color=\"blue\" style={{marginLeft: \"20px\"}}>{item.description}</Tag>\n                </span>\n              )}\n            </Draggable>\n          </div>\n        ),\n        dataIndex: item.description,\n        key: item.description\n      })\n    );\n\n    this.setState({ columns: currentColumns });\n  };\n\n  createEmptyDataSet = () => {\n    let data = [];\n    data.push({\n      key: \"1\",\n      h8: \"\"\n    });\n    this.setState({ data });\n  };\n\n  onReset = () => {\n    this.setState({});\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.attributes.length !== prevState.columns.length) {\n      this.createColumns();\n      this.createEmptyDataSet();\n    }\n  }\n\n  componentDidMount() {\n    this.createColumns();\n    this.createEmptyDataSet();\n  }\n\n  render() {\n    const listIsEmpty =\n      this.props.attributes === undefined || this.props.attributes.length === 0;\n    const tableWidth =\n      this.props.attributes.length > 0\n        ? this.props.attributes.length * DEFAULT_CELL_WIDTH\n        : EMPTY_QUERY_CELL_WIDTH;\n\n    return (\n      <>\n        Report query:\n        <Droppable\n          droppableId=\"attributes-target\"\n          direction=\"horizontal\"\n          style={{ backgroundColor: \"yellow\", overflowX: \"auto\" }}\n        >\n          {provided => (\n            <div className=\"selection-area empty\">\n              <div\n                id=\"attributes-target\"\n                style={{ width: tableWidth }}\n                ref={provided.innerRef}\n              >\n                {provided.placeholder}\n                {this.props.attributes.length > 0 ? (\n                  <Table\n                    bordered\n                    dataSource={this.state.data}\n                    columns={this.state.columns}\n                    pagination={false}\n                  />\n                ) : (\n                  <span>Add at least one attribute to create a new query!</span>\n                )}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nconst Attribute = props => (\n  <Tag color={props.color} style={{marginBottom: \"4px\"}}>{props.description}</Tag>\n);\n\nexport default Attribute;\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Attribute from \"./Attribute\";\nimport { Divider } from \"antd\";\n\nexport class AttributeSource extends React.Component {\n\n  deriveColorFromAttributeGroup = groupId => {\n    switch(groupId) {\n      case 0:\n      return \"blue\";\n      case 1:\n      return \"blue\";\n      default:\n      return \"blue\";\n    }\n  }\n\n  render() {\n    return (\n      <Droppable droppableId=\"attributes-source\" direction=\"horizontal\">\n        {provided => (\n          <div ref={provided.innerRef} style={{ maxWidth: \"750px\", marginLeft: \"10px\" }}>\n            {this.props.attributes.map((attributeCollection, groupId) => (\n              <div key={groupId} style={{paddingTop:\"6px\"}}>\n                <div key={groupId}>{attributeCollection.description}:</div>\n                {attributeCollection.attributes.map((item, index) => (\n                  <Draggable\n                    key={attributeCollection.description + \"-\" + item.id}\n                    draggableId={`source-${item.id}`}\n                    index={item.id}\n                  >\n                    {provided => (\n                      <span\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                      >\n                        <Attribute color={this.deriveColorFromAttributeGroup(groupId)} description={item.description} />\n                      </span>\n                    )}\n                  </Draggable>\n                ))}\n              </div>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React from \"react\";\nimport { Input, Button } from \"antd\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { SelectedAttributes } from \"./SelectedAttributes\";\nimport { AttributeSource } from \"./AttributeSource\";\n\nimport \"./ReportCreator.scss\";\nimport { debug } from \"util\";\n\nconst getInitialState = () => {\n  return {\n    selectedAttributes: [],\n    availableAttributes: [\n      {\n        description: \"Basic-Report\",\n        attributes: [\n          { id: 0, description: \"E/E-Komponente\" },\n          { id: 1, description: \"Baureihenverbund\" },\n          { id: 2, description: \"I-Stufe\" },\n          { id: 3, description: \"SGBM-ID\" },\n          { id: 4, description: \"CVN-Teilwert\" },\n          { id: 5, description: \"BNTM-Konfigterm\" },\n          { id: 6, description: \"Sachnummer\" },\n          { id: 7, description: \"Bordnetzteilnehmer-Variante\" },\n          { id: 8, description: \"CVN-Position\" },\n          { id: 9, description: \"Beschreibung\" },\n          { id: 10, description: \"Kommentar\" },\n          { id: 11, description: \"Anzahl Sub-CVN\" }\n        ]\n      },\n      {\n        description: \"PSDH\",\n        attributes: [\n          { id: 12, description: \"Motor\" },\n          { id: 13, description: \"Motorvariante\" },\n          { id: 14, description: \"E-Baureihe\" },\n          { id: 15, description: \"Karosserie\" },\n          { id: 16, description: \"Getriebe\" },\n          { id: 17, description: \"Hubraum\" },\n          { id: 18, description: \"Model\" },\n          { id: 19, description: \"Aufladung\" }\n        ]\n      },\n      {\n        description: \"Datenpflege\",\n        attributes: [\n          { id: 20, description: \"Testgroup\" },\n          { id: 21, description: \"Steuergerätetyp\" },\n          { id: 22, description: \"Module ID\" }\n        ]\n      },\n    ]\n  };\n};\n\nconst mapAttributeAndGroup = id => {\n  if (id < 12) {\n    return 0;\n  } else if (id > 19) {\n    return 2;\n  }\n  return 1;\n}\n\n// findGroupOfAttribute = attribute => {\n//   if (attribute.id < 12) {\n//     return 0;\n//   } else if (attribute.id > 19) {\n//     return 2;\n//   }\n//   return 1;\n// }\n\n// mapAttributeToGroup = attribute => {\n// }\n\nexport class ReportCreator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = getInitialState();\n  }\n\n  onDragEnd = result => {\n    const { destination, source } = result;\n    const { availableAttributes, selectedAttributes} = this.state;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      return;\n    }\n\n    const groupId = mapAttributeAndGroup(source.index);\n    let movedItem = null;\n\n    if (destination.droppableId === \"attributes-target\") {\n      movedItem = availableAttributes[groupId].attributes.filter(item => item.id === source.index);\n      availableAttributes[groupId].attributes = availableAttributes[groupId].attributes.filter(attribute => attribute.id !== source.index);\n      selectedAttributes.splice(destination.index, 0, movedItem[0]);\n      this.setState({ selectedAttributes, availableAttributes });\n    } else {\n      movedItem = selectedAttributes.filter(item => item.id === source.index)[0];\n      const newSelected = selectedAttributes.filter(attribute => attribute.id !== source.index);\n      availableAttributes[groupId].attributes.splice(destination.index, 0, movedItem);\n\n      this.setState({ selectedAttributes: newSelected, availableAttributes });\n    }\n\n    return;\n  };\n\n  render() {\n    return (\n      <DragDropContext\n        onDragStart={this.onDragStart}\n        onDragUpdate={this.onDragUpdate}\n        onDragEnd={this.onDragEnd}\n      >\n        Title\n        <p>\n          <Input placeholder=\"Report title\" style={{ width: \"200px\" }} />\n        </p>\n        <SelectedAttributes attributes={this.state.selectedAttributes} />\n        <div className=\"attribute-area\">\n        <div>Available report attributes:</div>\n            <AttributeSource attributes={this.state.availableAttributes} />\n        </div>\n        <div style={{ marginTop: \"10px\" }}>\n          <Button\n            type=\"primary\"\n            style={{ marginRight: \"10px\", marginTop: \"10px\" }}\n          >\n            Save Report\n          </Button>\n          <Button\n            type=\"secondary\"\n            onClick={() => {\n              this.setState(getInitialState());\n            }}\n          >\n            Reset Form\n          </Button>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { ReportCreator } from \"../ReportCreator\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class ReportManager extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Reports</h1>\n        <Tabs defaultActiveKey=\"1\" onChange={() => {}} type=\"card\">\n          <TabPane tab=\"Create Report\" key=\"1\">\n            <ReportCreator />\n          </TabPane>\n          <TabPane tab=\"Saved Reports\" key=\"2\">\n            <p>There are no saved reports yet.</p>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Icon, Drawer, Badge, Tooltip } from \"antd\";\nimport { TASK_MANAGER, REPORT_MANAGER } from \"../../App.js\";\nimport \"./DrawMenu.scss\";\n\nexport const DrawMenu = props => {\n  return (\n    <Drawer\n      className=\"drawer\"\n      visible={props.menuVisible}\n      placement=\"left\"\n      onClose={props.handleClick}\n      mask={false}\n      closable={false}\n      width=\"12.6%\"\n    >\n      <div\n        className={`menu-item ${\n          props.activePage === TASK_MANAGER ? \"active\" : \"\"\n        } clickable`}\n        onClick={() => props.handleNavClick(TASK_MANAGER)}\n      >\n        <Icon className=\"menu-icon\" type=\"ordered-list\" />{\" \"}\n        <Tooltip title=\"Number of unassigned tasks\">\n          <Badge count={props.openTasks} offset={[17, 2]}>\n            <span>Tasks</span>\n          </Badge>\n        </Tooltip>\n      </div>\n      <div\n        className={`menu-item ${\n          props.activePage === REPORT_MANAGER ? \"active\" : \"\"\n        } clickable`}\n        onClick={() => props.handleNavClick(REPORT_MANAGER)}\n      >\n        <Icon className=\"menu-icon\" type=\"clock-circle\" /> Reports\n      </div>\n    </Drawer>\n  );\n};\n","export const unresolvedChecksums = [\n    {\n      id: \"ab30df0ebbb3\",\n      createdDate: 1554971763,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.\",\n      claimed: false\n    },\n    {\n      id: \"5eb655848d32\",\n      createdDate: 1554888963,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\",\n      claimed: false\n    },\n    {\n      id: \"af9f49443e14\",\n      createdDate: 1554370563,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna.\",\n      claimed: false\n    },\n    {\n      id: \"51529cd9a285\",\n      createdDate: 1554370563,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.\",\n      claimed: false\n    },\n    {\n      id: \"b62703a53b1a\",\n      createdDate: 1554626163,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod.\",\n      claimed: false\n    },\n    {\n      id: \"eb3137de23bb\",\n      createdDate: 1554543363,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna.\",\n      claimed: false\n    },\n    {\n      id: \"938014fbd9b8\",\n      createdDate: 1554024963,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\",\n      claimed: false\n    },\n    {\n      id: \"4164b3749333\",\n      createdDate: 1551951363,\n      description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\",\n      claimed: false\n    }\n  ]","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport { Navigation } from \"./components/Navigation\";\nimport { TaskManager } from \"./components/TaskManager\";\nimport { ReportManager } from \"./components/ReportManager\";\nimport { DrawMenu } from \"./components/DrawMenu\";\n\nimport \"./App.scss\";\n\nimport { unresolvedChecksums } from \"./sample_data/sample_data\";\n\nexport const TASK_MANAGER = \"task-manager\";\nexport const REPORT_MANAGER = \"report-manager\";\n\nclass App extends Component {\n  state = {\n    menuVisible: true,\n    activePage: TASK_MANAGER,\n    claimedTasks: [],\n    unresolvedChecksums: unresolvedChecksums\n  };\n\n  handleClick = () => {\n    this.setState({\n      menuVisible: !this.state.menuVisible\n    });\n  };\n\n  handleNavClick = componentKey => {\n    this.setState({ activePage: componentKey });\n  };\n\n  handleClaim = taskId => {\n    const task = this.state.unresolvedChecksums.filter(\n      task => task.id === taskId\n    )[0];\n    task.claimed = true;\n\n    const claimedTasks = this.state.claimedTasks;\n    claimedTasks.push(task);\n\n    const newUnresolved = this.state.unresolvedChecksums.filter(\n      task => task.id !== taskId\n    );\n\n    this.setState({ claimedTasks, unresolvedChecksums: newUnresolved });\n  };\n\n  handleUnclaim = taskId => {\n    const task = this.state.claimedTasks.filter(task => task.id === taskId)[0];\n    task.claimed = false;\n\n    const unresolvedChecksums = this.state.unresolvedChecksums;\n    unresolvedChecksums.push(task);\n\n    const newClaimed = this.state.claimedTasks.filter(\n      task => task.id !== taskId\n    );\n\n    this.setState({ unresolvedChecksums, claimedTasks: newClaimed });\n  };\n\n  renderDrawer = () => (\n    <DrawMenu\n      menuVisible={this.state.menuVisible}\n      activePage={this.state.activePage}\n      handleClick={() => this.handleClick(this.state.activePage)}\n      handleNavClick={componentKey => this.handleNavClick(componentKey)}\n      openTasks={this.state.unresolvedChecksums.length}\n    />\n  );\n\n  renderPageContent = componentKey => {\n    switch (componentKey) {\n      case TASK_MANAGER:\n        return (\n          <TaskManager\n            claimed={this.state.claimedTasks}\n            unresolvedChecksums={this.state.unresolvedChecksums}\n            onClaim={taskId => this.handleClaim(taskId)}\n            onUnclaim={taskId => this.handleUnclaim(taskId)}\n          />\n        );\n      case REPORT_MANAGER:\n        return <ReportManager />;\n      default:\n        return (\n          <TaskManager\n            claimed={this.state.claimedTasks}\n            unresolvedChecksums={this.state.unresolvedChecksums}\n            onClaim={taskId => this.handleClaim(taskId)}\n            onUnclaim={taskId => this.handleUnclaim(taskId)}\n          />\n        );\n    }\n  };\n\n  render() {\n    const {menuVisible} = this.state\n    const currentPage = this.renderPageContent(this.state.activePage);\n\n    return (\n      <div className=\"App\">\n        <Row>\n          <Navigation\n            menuVisible={this.state.menuVisible}\n            handleClick={() => this.handleClick()}\n          />\n        </Row>\n\n        <Row className=\"app-content\">\n          {menuVisible ? (\n            <div className=\"menu-visible\">\n              <Col span={3} id=\"drawer-col\">\n                {this.renderDrawer()}\n              </Col>\n              <Col span={21}>{currentPage}</Col>\n            </div>\n          ) : (\n            <Col span={24}>{currentPage}</Col>\n          )}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './variables.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}